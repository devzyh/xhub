<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">

    <resultMap type="${packageName}.domain.${ClassName}" id="${ClassName}Result">
        #foreach ($column in $columns)
            <result property="${column.javaField}" column="${column.columnName}"/>
        #end
    </resultMap>
    #if($table.sub)

        <resultMap id="${ClassName}${subClassName}Result" type="${packageName}.domain.${ClassName}" extends="${ClassName}Result">
            <collection property="${subclassName}List" notNullColumn="sub_${subTable.pkColumn.columnName}"
            javaType="java.util.List" resultMap="${subClassName}Result"/>
        </resultMap>

        <resultMap type="${packageName}.domain.${subClassName}" id="${subClassName}Result">
            #foreach ($column in $subTable.columns)
                <result property="${column.javaField}" column="sub_${column.columnName}"/>
            #end
        </resultMap>
    #end

    <sql id="select${ClassName}Vo">
        select#foreach($column in $columns) $column.columnName#if($foreach.count != $columns.size()),#end#end
        from ${tableName}
    </sql>

    <select id="select${ClassName}List" resultMap="${ClassName}Result">
        <include refid="select${ClassName}Vo"/>
        <where>
            #foreach($column in $columns)
                #set($queryType=$column.queryType)
                #set($javaField=$column.javaField)
                #set($javaType=$column.javaType)
                #set($columnName=$column.columnName)
                #set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
                #if($column.query)
                    #if($column.queryType == "EQ")
            <if test="data.$javaField != null #if($javaType == 'String' ) and data.$javaField.trim() != ''#end">
                and $columnName = #{data.$javaField}
            </if>
                    #elseif($queryType == "NE")
            <if test="data.$javaField != null #if($javaType == 'String' ) and data.$javaField.trim() != ''#end">
                and $columnName != #{data.$javaField}
            </if>
                    #elseif($queryType == "GT")
            <if test="data.$javaField != null #if($javaType == 'String' ) and data.$javaField.trim() != ''#end">
                and $columnName &gt; #{data.$javaField}
            </if>
                    #elseif($queryType == "GTE")
            <if test="data.$javaField != null #if($javaType == 'String' ) and data.$javaField.trim() != ''#end">
                and $columnName &gt;= #{data.$javaField}
            </if>
                    #elseif($queryType == "LT")
            <if test="data.$javaField != null #if($javaType == 'String' ) and data.$javaField.trim() != ''#end">
                and $columnName &lt; #{data.$javaField}
            </if>
                    #elseif($queryType == "LTE")
            <if test="data.$javaField != null #if($javaType == 'String' ) and data.$javaField.trim() != ''#end">
                and $columnName &lt;= #{data.$javaField}
            </if>
                    #elseif($queryType == "LIKE")
            <if test="data.$javaField != null #if($javaType == 'String' ) and data.$javaField.trim() != ''#end">
                and $columnName like concat('%', #{data.$javaField}, '%')
            </if>
                    #elseif($queryType == "BETWEEN")
            <if test="data.begin$AttrName != null and data.begin$AttrName != '' and data.end$AttrName != null and data.end$AttrName != ''">
                and $columnName between #{data.begin$AttrName} and #{data.end$AttrName}
            </if>
                    #end
                #end
            #end
        </where>
    </select>
    
    #if($table.sub)

        <delete id="delete${subClassName}By${subTableFkClassName}s" parameterType="String">
            delete from ${subTableName} where ${subTableFkName} in
            <foreach item="${subTableFkclassName}" collection="array" open="(" separator="," close=")">
                #{${subTableFkclassName}}
            </foreach>
        </delete>

        <delete id="delete${subClassName}By${subTableFkClassName}" parameterType="${pkColumn.javaType}">
            delete
            from ${subTableName} where ${subTableFkName} = #{${subTableFkclassName}}
        </delete>

        <insert id="batch${subClassName}">
            insert into ${subTableName}
            (#foreach($column in $subTable.columns) $column.columnName#if($foreach.count != $subTable.columns.size())
            ,#end#end) values
            <foreach item="item" index="index" collection="list" separator=",">
                (#foreach($column in $subTable.columns) #{item.$column.javaField
                }#if($foreach.count != $subTable.columns.size()),#end#end)
            </foreach>
        </insert>
    #end
</mapper>
